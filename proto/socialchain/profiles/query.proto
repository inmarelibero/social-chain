syntax = "proto3";
package socialchain.profiles;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "socialchain/profiles/params.proto";

option go_package = "socialchain/x/profiles/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/socialchain/profiles/params";
  }

  rpc OwnerOf(QueryOwnerOfRequest) returns (QueryOwnerOfResponse) {
    option (google.api.http).get = "/socialchain/profiles/owner_of/{handle}";
  }

  rpc OwnedBy(QueryOwnedByRequest) returns (QueryOwnedByResponse) {
    option (google.api.http).get = "/socialchain/profiles/owned_by/{owner}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// Request type for getting the owner of a handle
message QueryOwnerOfRequest {
  string handle = 1;
}

// Response type
message QueryOwnerOfResponse {
  string id = 1;
  string handle = 2;
  string owner = 3;
}

// Request type for getting the handle of an owner
message QueryOwnedByRequest {
  string owner = 1;
}

// Response type
message QueryOwnedByResponse {
  uint64 id = 1;
  string handle = 2;
  string owner = 3;
}
